 @using MudBlazor
@inject SurveyState SurveyState
<h3>RatingAnswer</h3>

@if (QuestionData is not null)
{
    <MudCard>
        <MudCardHeader>
            <MudText Typo="Typo.h6">Rating Question</MudText>
        </MudCardHeader>
        <MudCardContent>
            <MudText>@QuestionData.Title</MudText>
            <br />
            <MudGrid Justify="Justify.SpaceEvenly">
                <MudRadioGroup T="int" ValueChanged="@(rating => ValueChanged(rating))">
                    @foreach (var rating in _ratings)
                    {
                        <MudItem>
                            <MudRadio 
                            T="int"
                            Value="rating" 
                            Dense="true" 
                            Label="@rating.ToString()" 
                            LabelPlacement="@(Placement.Top)"></MudRadio>
                        </MudItem>
                    }
                </MudRadioGroup>
            </MudGrid>
        </MudCardContent>
    </MudCard>
}


@code {

    [Parameter] public RatingQuestion? QuestionData { get; set; }

    private RatingResponse _ratingResponse { get; set; } = new();

    private IEnumerable<int> _ratings = [];

    private int RatingChoice { get; set; }

    protected override void OnParametersSet()
    {
        if(QuestionData is not null)
        {
            RatingResponse ratingResponse = new()
                {
                    QuestionId = QuestionData.Id,
                    QuestionTitle = QuestionData.Title,
                    ChoiceRange = QuestionData.ChoiceRange
                };
            _ratingResponse = ratingResponse;

            _ratings = Enumerable.Range(1, QuestionData.ChoiceRange);

        }
        base.OnParametersSet();
    }

    private void ValueChanged(int rating)
    {
        _ratingResponse.Choice = rating;
        SurveyState.InsertOrUpdateResponse(_ratingResponse);
    }

}
